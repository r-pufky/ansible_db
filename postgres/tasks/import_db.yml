---
###############################################################################
# Postgres Import DB
###############################################################################
# If the database is newly created, automatically attempt to import the latest
# backup.
#
# Args:
#   db: dict containing database to import, see defaults.yml.
#
# Reference:
# * https://semisignal.com/postgresql-database-import-with-ansible/

- ansible.builtin.include_tasks: pgoptions.yml

- name: 'import db | create db {{ db.name }} if not present'
  community.postgresql.postgresql_db:
    name:       '{{ db.name }}'
    lc_collate: '{{ db.lc_collate|default("en_US.UTF-8") }}'
    lc_ctype:   '{{ db.lc_ctype|default("en_US.UTF-8") }}'
    encoding:   '{{ db.encoding|default("UTF-8") }}'
    template:   '{{ db.template|default("template0") }}'
    login_host: '{{ db.login_host|default("localhost") }}'
    login_user: '{{ db.login_user|default(db_postgres_user) }}'
    login_password:    '{{ db.login_password|default(omit) }}'
    login_unix_socket: '{{ db.login_unix_socket|default(db_postgres_unix_sockets[0]) }}'
    port:       '{{ db.port|default(omit) }}'
    owner:      '{{ db.owner|default(db_postgres_user) }}'
    conn_limit: '{{ db.conn_limit|default(omit) }}'
    state:      '{{ db.state|default("present") }}'
  become: true
  become_user: '{{ db_postgres_user }}'
  # Reference: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true
  environment:
    PGOPTIONS: '{{ _db_postgres_pgoptions }}'
  register: _db_postgres_db_create
  when: 'db.name not in (_db_postgres_existing_dbs.query_result|map(attribute="datname") )'
  no_log: true # db password

# DB's created without a sql dump to import should not attempt imports.
- name: 'import db | check for existing backup'
  ansible.builtin.stat:
    path: '{{ db_postgres_backup_dir }}/{{ db.name }}-latest.sql'
  register: _db_postgres_import_backup

- name: 'import db | import {{ db.name }}' # noqa no-handler conditional
  community.postgresql.postgresql_db:
    name:       '{{ db.name }}'
    login_host: '{{ db.login_host|default("localhost") }}'
    login_user: '{{ db.login_user|default(db_postgres_user) }}'
    login_password:    '{{ db.login_password|default(omit) }}'
    login_unix_socket: '{{ db.login_unix_socket|default(db_postgres_unix_sockets[0]) }}'
    port:       '{{ db.port|default(omit) }}'
    target:     '{{ db_postgres_backup_dir }}/{{ db.name }}-latest.sql'
    state:      'restore'
  become: true
  become_user: '{{ db_postgres_user }}'
  # Reference: https://github.com/ansible/ansible/issues/16048#issuecomment-229012509
  vars:
    ansible_ssh_pipelining: true
  environment:
    PGOPTIONS: '{{ _db_postgres_pgoptions }}'
  when: |
    _db_postgres_db_create.changed and
    _db_postgres_import_backup.stat.exists
  no_log: true # db password
